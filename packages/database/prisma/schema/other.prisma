enum EmployeeStatus {
    ACTIVE
    INACTIVE
}

model Company {
    id String @id @default(cuid())

    // Información general
    name               String
    image              String
    companyDescription String

    // Ubicaciones
    city       String?
    state      String?
    country    String?
    postalCode String?

    // Google
    email        String?
    mapsLocation String?

    // Borrado lógico
    isDeleted Boolean   @default(false)
    deletedAt DateTime?
    deletedBy String?   // ID del usuario que eliminó el registro

    // Relaciones
    employees Employees[]
    services  Services[]
    users     User[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@unique([name])
    @@unique([email])
    @@map("company")
}

model Employees {
    id String @id @default(cuid())

    // Información general
    name        String
    phoneNumber String?
    address     String?
    status      EmployeeStatus @default(ACTIVE)

    // Borrado lógico
    isDeleted Boolean   @default(false)
    deletedAt DateTime?
    deletedBy String?   // ID del usuario que eliminó el registro

    // Relaciones
    company   Company @relation(fields: [companyId], references: [id])
    companyId String

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@unique([phoneNumber])
    @@map("employees")
}

model Services {
    id String @id @default(cuid())

    // Información general
    name          String
    price         Float
    modifiedPrice Float?
    duration      Int
    lastUse       DateTime?

    // Borrado lógico
    isDeleted Boolean   @default(false)
    deletedAt DateTime?
    deletedBy String?   // ID del usuario que eliminó el registro

    // Relaciones
    company   Company @relation(fields: [companyId], references: [id])
    companyId String

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@unique([name])
    @@map("services")
}